<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.business.dao.ServiceRoomDao">

    <resultMap type="com.business.entity.ServiceRoomEntity" id="BaseResultMap">
        <result property="serviceId" column="service_id"/>
        <result property="companyId" column="company_id"/>
        <result property="companyName" column="companyName"/>
        <result property="roomId" column="room_id"/>
        <result property="roomName" column="roomName"/>
        <result property="userId" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="serviceClass" column="service_class"/>
        <result property="serviceTag" column="service_tag"/>
        <result property="remark" column="remark"/>
        <result property="appointmentTime" column="appointment_time"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        `service_id`,
        `company_id`,
        (select name from company_info where company_info.company_id=service_room.company_id) as companyName,
        `room_id`,
        (select name from company_room where company_room.room_id=service_room.room_id) as roomName,
        `user_id`,
        (select nickname from member_user where  member_user.user_id=service_room.user_id) as nickname,
        `service_class`,
        `service_tag`,
        `remark`,
        `appointment_time`,
        `status`,
        `create_time`,
        `update_time`
  	</sql>

    <select id="queryObject" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
         from service_room
        where service_id = #{value}
    </select>
    <select id="queryList" resultType="com.business.entity.ServiceRoomEntity">
        select
        <include refid="Base_Column_List"/>
        from service_room
        WHERE 1=1
        <if test="companyName != null and companyName.trim() != ''">
            AND company_id in (select company_id from company_info where name LIKE concat('%',#{companyName},'%'))
        </if>
        <if test="companyId != null and companyId != '0'">
            AND company_id=#{companyId}
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by service_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from service_room
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <update id="update" parameterType="com.business.entity.ServiceRoomEntity">
        update service_room
        <set>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime}
            </if>
        </set>
        where service_id = #{serviceId}
    </update>


    <select id="queryLogList" resultType="com.business.entity.ServiceRoomLogEntity">
        select
	    `log_id`,
	    `service_id`,
	    `staff_id`,
	    `status`,
	    `remark`,
	    `create_time`
        from service_room_log
        where service_id = #{value}
    </select>

    <insert id="saveLog" parameterType="com.business.entity.ServiceRoomLogEntity">
		insert into service_room_log(
          `log_id`,
          `service_id`,
          `staff_id`,
          `status`,
          `remark`,
          `create_time`        )
		values(
          #{logId},
          #{serviceId},
          #{staffId},
          #{status},
          #{remark},
          #{createTime}         )
	</insert>

</mapper>