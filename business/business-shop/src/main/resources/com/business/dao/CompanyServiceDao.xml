<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.business.dao.CompanyServiceDao">

    <resultMap type="com.business.entity.CompanyServiceEntity" id="BaseResultMap">
        <id property="companyId" column="company_id"/>
        <id property="companyName" column="companyName"/>
        <id property="serviceClass" column="service_class"/>
        <!-- 描述集合属性 -->
        <collection property="listServiceTag" ofType="String">
            <result property="serviceTag" column="service_tag"/>
        </collection>
    </resultMap>

    <select id="queryByCompanyService" resultMap="BaseResultMap">
        select
        company_service.company_id,
        company_info.name as companyName,
        company_service.service_class,
        company_service.service_tag
        from company_service left join company_info on company_service.company_id=company_info.company_id
        where company_service.status=0 and company_service.company_id = #{companyId} and  company_service.service_class = #{serviceClass}
    </select>

    <select id="queryTagList" resultType="String">
        select service_tag
        from company_service
        where status!=2 and company_id = #{companyId} and  service_class = #{serviceClass}
    </select>

    <select id="queryList" resultMap="BaseResultMap">
        select
        company_service.company_id,
        company_info.name as companyName,
        company_service.service_class,
        company_service.service_tag
        from company_service
        left join company_info on company_service.company_id=company_info.company_id
        WHERE company_service.status=0
        <if test="name != null and name.trim() != ''">
            AND company_info.name LIKE concat('%',#{name},'%')
        </if>
        <if test="companyId != null and companyId != '0'">
            AND company_service.company_id=#{companyId}
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by company_service.company_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from (select company_id ,service_class from company_service WHERE status=0
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <if test="companyId != null and companyId != '0'">
            AND company_service.company_id=#{companyId}
        </if>
        group by company_id,service_class) a
    </select>

    <select id="hasTag" resultType="com.business.entity.CompanyServiceEntity">
        select * from company_service
        WHERE company_id = #{companyId} and  service_class = #{serviceClass} and service_tag=#{serviceTag}
    </select>

    <update id="disableByCompanyService">
        update company_service
        <set>
            `status` = 1,
            `update_time` = now()
        </set>
        where company_id = #{companyId} and service_class = #{serviceClass}
    </update>

    <update id="deleteByCompanyService">
        update company_service
        <set>
            `status` = 2,
            `update_time` = now()
        </set>
        where company_id = #{companyId} and service_class = #{serviceClass}
    </update>

    <insert id="save" parameterType="com.business.entity.CompanyServiceEntity">
		insert into company_service(
          `service_id`,
          `company_id`,
          `service_class`,
          `service_tag`,
          `status`,
          `create_time`,
          `update_time`        )
		values(
          #{serviceId},
          #{companyId},
          #{serviceClass},
          #{serviceTag},
          0,
          #{createTime},
          #{updateTime}         )
	</insert>

    <update id="update" parameterType="com.business.entity.CompanyServiceEntity">
        update company_service
        <set>
            <if test="companyId != null">
                `company_id` = #{companyId},
            </if>
            <if test="serviceClass != null">
                `service_class` = #{serviceClass},
            </if>
            <if test="serviceTag != null">
                `service_tag` = #{serviceTag},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime}
            </if>
        </set>
        where service_id = #{serviceId}
    </update>
</mapper>