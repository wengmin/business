<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.business.dao.CompanyStaffDao">

    <resultMap type="com.business.entity.CompanyStaffEntity" id="BaseResultMap">
        <result property="staffId" column="staff_id"/>
        <result property="companyId" column="company_id"/>
        <result property="companyName" column="companyName"/>
        <result property="name" column="name"/>
        <result property="mobile" column="mobile"/>
        <result property="post" column="post"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
	    `staff_id`,
	    `company_id`,
	    (select name from company_info where company_info.company_id=company_staff.company_id) as companyName,
	    `name`,
	    `mobile`,
	    `post`,
	    `user_id`,
	    `status`,
	    `create_time`,
	    `update_time`
  	</sql>

    <select id="queryObject" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from company_staff
        where staff_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from company_staff
        WHERE status!=2
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <if test="companyId != null and companyId != '0'">
            AND company_id=#{companyId}
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by staff_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from company_staff
        WHERE status!=2
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <if test="companyId != null and companyId != '0'">
            AND company_id=#{companyId}
        </if>
    </select>

    <insert id="save" parameterType="com.business.entity.CompanyStaffEntity">
		insert into company_staff(
          `staff_id`,
          `company_id`,
          `name`,
          `mobile`,
          `post`,
          `user_id`,
          `status`,
          `create_time`,
          `update_time`        )
		values(
          #{staffId},
          #{companyId},
          #{name},
          #{mobile},
          #{post},
          #{userId},
          #{status},
          #{createTime},
          #{updateTime}         )
	</insert>

    <update id="update" parameterType="com.business.entity.CompanyStaffEntity">
        update company_staff
        <set>
            <if test="companyId != null">
                `company_id` = #{companyId},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="mobile != null">
                `mobile` = #{mobile},
            </if>
            <if test="post != null">
                `post` = #{post},
            </if>
            <if test="userId != null">
                `user_id` = #{userId},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime}
            </if>
        </set>
        where staff_id = #{staffId}
    </update>

    <update id="delete">
        update company_staff
        <set>
            `status` = 2,
        </set>
        where staff_id = #{value}
    </update>
    <update id="deleteBatch">
        update company_staff
        <set>
            `status` = 2,
        </set>
        where staff_id in
        <foreach item="staffId" collection="array" open="(" separator="," close=")">
            #{staffId}
        </foreach>
    </update>
</mapper>