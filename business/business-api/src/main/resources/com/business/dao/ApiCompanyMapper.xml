<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.business.dao.ApiCompanyMapper">

    <resultMap type="com.business.entity.CompanyVo" id="BaseResultMap">
        <result property="companyId" column="company_id"/>
        <result property="name" column="name"/>
        <result property="address" column="address"/>
        <result property="phone" column="phone"/>
        <result property="logo" column="logo"/>
        <result property="scale" column="scale"/>
        <result property="trade" column="trade"/>
        <result property="introduction" column="introduction"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <select id="queryObject" resultMap="BaseResultMap">
		select * from company_info where company_id = #{value}
	</select>

    <select id="queryByName" resultMap="BaseResultMap">
		select * from company_info where name = #{value}
	</select>

    <select id="queryList" resultType="com.business.entity.CompanyVo">
        select
        `company_id`,
        `name`,
        `address`,
        `phone`,
        `logo`,
        `scale`,
        `trade`,
        `introduction`,
        `create_time`
        from company_info
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by company_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from company_info
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.business.entity.CompanyVo" useGeneratedKeys="true" keyProperty="companyId">
		insert into company_info(
        `name`,
        `address`,
        `phone`,
        `logo`,
        `scale`,
        `trade`,
        `introduction`,
        `create_time`     )
		values(
          #{name},
          #{address},
          #{phone},
          #{logo},
          #{scale},
          #{trade},
          #{introduction},
          now()         )
	</insert>

    <update id="update" parameterType="com.business.entity.CompanyVo">
        update company_info
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="address != null">
                `address` = #{address},
            </if>
            <if test="phone != null">
                `phone` = #{phone},
            </if>
            <if test="logo != null">
                `logo` = #{logo},
            </if>
            <if test="scale != null">
                `scale` = #{scale},
            </if>
            <if test="trade != null">
                `trade` = #{trade},
            </if>
            <if test="introduction != null">
                `introduction` = #{introduction},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime}
            </if>
        </set>
        where company_id = #{companyId}
    </update>

    <delete id="delete">
		delete from company_info where company_id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from company_info where user_id in
        <foreach item="companyId" collection="array" open="(" separator="," close=")">
            #{companyId}
        </foreach>
    </delete>


    <select id="queryFileList" resultType="com.business.entity.CompanyFileVo">
        select
        `id`,
        `company_id`,
        `fileurl`,
        `create_time`
        from company_file
        WHERE 1=1
        <if test="companyId != null">
            AND company_id = #{companyId}
        </if>
        order by create_time desc
    </select>

    <insert id="saveFile" parameterType="java.util.List">
        insert into company_file(
        `company_id`,
        `fileurl`,
        `create_time` )
        values
        <foreach collection="fileList" item="item" index="index" separator=",">
            (
            #{item.companyId},
            #{item.fileurl},
            now()
            )
        </foreach>
    </insert>

    <delete id="deleteFile">
		delete from company_file where id = #{value}
	</delete>

    <delete id="deleteFileByCompany">
		delete from company_file where company_id = #{value}
	</delete>
</mapper>