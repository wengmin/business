<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.business.dao.ApiUserMapper">

	<resultMap type="com.business.entity.UserVo" id="BaseResultMap">
		<result property="userId" column="user_id"/>
		<result property="openid" column="openid"/>
		<result property="mobile" column="mobile"/>
		<result property="nickname" column="nickname"/>
		<result property="avatar" column="avatar"/>
		<result property="gender" column="gender"/>
		<result property="country" column="country"/>
		<result property="province" column="province"/>
		<result property="city" column="city"/>
		<result property="createTime" column="create_time"/>
	</resultMap>

	<sql id="Base_Column_List">
	    `user_id`,
	    `openid`,
	    `mobile`,
	    `nickname`,
	    `avatar`,
	    `gender`,
	    `country`,
	    `province`,
	    `city`,
	    `create_time`
  	</sql>

	<select id="queryByOpenId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from member_user
		where 1 = 1
		<if test="openId != null">
			and `openid` = #{openId}
		</if>
	</select>

	<select id="queryByMobile" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from member_user
		where 1 = 1
		<if test="mobile != null">
			and `mobile` = #{mobile}
		</if>
	</select>

	<select id="queryObject" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from member_user
		where user_id = #{value}
	</select>

	<select id="queryList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from member_user
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from member_user
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
	</select>

	<select id="queryOpenidByUserId" resultType="string">
		select openid from member_user where user_id = #{value}
	</select>

	<insert id="save" parameterType="com.business.entity.UserVo" useGeneratedKeys="true" keyProperty="userId">
		insert into member_user(
	    `openid`,
	    `mobile`,
	    `nickname`,
	    `avatar`,
	    `gender`,
	    `country`,
	    `province`,
	    `city`,
	    `create_time`)
		values(
	    #{openid},
	    #{mobile},
	    #{nickname},
	    #{avatar},
	    #{gender},
	    #{country},
	    #{province},
	    #{city},
        now())
	</insert>

	<update id="update" parameterType="com.business.entity.UserVo">
		update member_user
		<set>
			<if test="openid != null">
				`openid` = #{openid},
			</if>
			<if test="mobile != null">
				`mobile` = #{mobile},
			</if>
			<if test="nickname != null">
				`nickname` = #{nickname},
			</if>
			<if test="avatar != null">
				`avatar` = #{avatar},
			</if>
			<if test="gender != null">
				`gender` = #{gender},
			</if>
			<if test="country != null">
				`country` = #{country},
			</if>
			<if test="province != null">
				`province` = #{province},
			</if>
			<if test="city != null">
				`city` = #{city},
			</if>
			<if test="createTime != null">
				`create_time` = #{createTime}
			</if>
		</set>
		where user_id = #{userId}
	</update>

	<update id="updateByOpenId" parameterType="com.business.entity.UserVo">
		update member_user
		<set>
			<if test="mobile != null">
				`mobile` = #{mobile},
			</if>
			<if test="nickname != null">
				`nickname` = #{nickname},
			</if>
			<if test="avatar != null">
				`avatar` = #{avatar},
			</if>
			<if test="gender != null">
				`gender` = #{gender},
			</if>
			<if test="country != null">
				`country` = #{country},
			</if>
			<if test="province != null">
				`province` = #{province},
			</if>
			<if test="city != null">
				`city` = #{city},
			</if>
			<if test="createTime != null">
				`create_time` = #{createTime}
			</if>
		</set>
		where openid = #{openid}
	</update>

	<delete id="delete">
		delete from member_user where user_id = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from member_user where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
</mapper>